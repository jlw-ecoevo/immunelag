state = state,
n_iter=10,
frac_suscept_outbreak = 0.9)
setwd("~/immunelag/Fig4")
pdf(paste0("ImmunizationLag_daily.pdf"),width=12,height=4)
par(mfrow=c(1,3))
plotOut(out_daily_nolag,main=expression("Daily Outbreak, No Lag"))
plotOut(out_daily_shortlag,main=expression("Daily Outbreak, Short Lag"))
plotOut(out_daily_longlag,main=expression("Daily Outbreak, Long Lag"))
par(mfrow=c(1,1))
dev.off()
setwd("~/immunelag/Fig4")
pdf(paste0("ImmunizationLag_weekly.pdf"),width=12,height=4)
par(mfrow=c(1,3))
plotOut(out_weekly_nolag,main=expression("Weekly Outbreak, No Lag"))
plotOut(out_weekly_shortlag,main=expression("Weekly Outbreak, Short Lag"))
plotOut(out_weekly_longlag,main=expression("Weekly Outbreak, Long Lag"))
par(mfrow=c(1,1))
dev.off()
setwd("~/immunelag/Fig4")
pdf(paste0("ImmunizationLag_monthly.pdf"),width=12,height=4)
par(mfrow=c(1,3))
plotOut(out_monthly_nolag,main=expression("Monthly Outbreak, No Lag"))
plotOut(out_monthly_shortlag,main=expression("Monthly Outbreak, Short Lag"))
plotOut(out_monthly_longlag,main=expression("Monthly Outbreak, Long Lag"))
par(mfrow=c(1,1))
dev.off()
setwd("~/immunelag/Fig4")
save(out_daily_nolag,
out_daily_shortlag,
out_daily_longlag,
file = "immunizationlag_daily.RData")
library(gplots)
library(dplyr)
library(ggplot2)
library(reshape2)
library(wesanderson)
#########################
# Autoimmunity Invasion #
#########################
alpha_range <- seq(0.1,1,0.01)
mu_range <- 10^seq(-10,0.5,0.05)
alpha_mu_combos <- expand.grid(alpha_range,mu_range)
names(alpha_mu_combos) <- c("alpha","mu")
alpha_mu_combos$k <- 2*alpha_mu_combos$mu/alpha_mu_combos$alpha
k_mat <- reshape(alpha_mu_combos, idvar = "alpha", timevar = "mu", direction = "wide")
setwd("~/immunelag/Fig2")
pdf(paste0("InvasionAutoimmunity_contour.pdf"),width=8,height=5)
par(mar=c(5.1, 5, 1, 0.2))
filled.contour(x=alpha_range,
y=log10(mu_range),
z=log10(as.matrix(k_mat[,-1])),
xlab=expression("Maximum Rate of Genome Replication (" * alpha * ")"),
ylab=expression("Spacer Acquisition Rate (" * log[10](mu) * ")"),
levels=c(-10,-2,10),
col = wes_palette("Moonrise3",2),
labcex=1,
cex.lab=1.5,
cex.axis=1.5,
plot.axes = { contour(x=alpha_range,
y=log10(mu_range),
z=log10(as.matrix(k_mat[,-1])),
levels = -2, lwd=5, labels = "Cost of SM = 0.01",
drawlabels = T, axes = FALSE,
frame.plot = FALSE, add = TRUE,labcex=1);
contour(x=alpha_range,
y=log10(mu_range),
z=log10(as.matrix(k_mat[,-1])),
levels = -3, lwd=2, labels = "Cost of SM = 0.001",
drawlabels = T, axes = FALSE,
frame.plot = FALSE, add = TRUE,labcex=1);
contour(x=alpha_range,
y=log10(mu_range),
z=log10(as.matrix(k_mat[,-1])),
levels = -4, lwd=2, labels = "Cost of SM = 0.0001",
drawlabels = T, axes = FALSE,
frame.plot = FALSE, add = TRUE,labcex=1);
contour(x=alpha_range,
y=log10(mu_range),
z=log10(as.matrix(k_mat[,-1])),
levels = -1, lwd=2, labels = "Cost of SM = 0.1",
drawlabels = T, axes = FALSE,
frame.plot = FALSE, add = TRUE,labcex=1);
abline(h=log10(4e-7),lty=2,col=wes_palette("Moonrise3",5)[3],lwd=1)
abline(h=log10(4e-6),lty=2,col=wes_palette("Moonrise3",5)[3],lwd=4)
abline(h=log10(2e-5),lty=2,col=wes_palette("Moonrise3",5)[3],lwd=1)
abline(v=0.4,lty=2,col=wes_palette("Moonrise3",5)[3],lwd=4)
points(0.4,log10(4e-6),pch=21,bg="red",cex=2);
text(x=0.7,y=-8,labels="CRISPR Favored",cex=1.5)
text(x=0.7,y=0,labels="SM Favored",cex=1.5);
axis(2);
axis(1);},
key.axes = "")
par(mar=c(5.1, 4.1, 4.1, 2.1))
dev.off()
library(deSolve)
library(dplyr)
library(ggplot2)
library(ggpubr)
bootMeanCI <- function(x, n = 1000){
boot.samples <- matrix(sample(x, size = n*length(x), replace = TRUE),
n,
length(x))
boot.means <- apply(boot.samples, 1, mean)
return(quantile(x,c(0.025,0.975)))
}
lagSystem <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
dR <- - e*v*R*(X+Y)/(z+R)
dX <- ((1-2*mu/alpha)*v*R/(z+R) - delta*V)*X + phi*Ix
dY <- ((1-k)*v*R/(z+R))*Y
dIx <- delta*X*V - phi*Ix
dV <- -delta*X*V
# return the rate of change
list(c(dR,dX,dY,dIx,dV))
}) # end with(as.list ...
}
competeXY <- function(V0,phi,dpi=1,re_add_phage=T,daylen=24,kappa=0){
parameters <- c(e=5e-7,
v=2,
z=1,
delta=1e-7,
mu=4e-6,
alpha=0.4,
k=kappa,
delta=1e-7,
phi=phi)
state <- c(R=500,
X=max(1e7-V0,0),
Y=1e7,
Ix=min(V0,1e7),
V=V0)
times <- seq(0, daylen, by = 1)
for(i in 1:dpi){
out <- ode(y = state,
times = times,
func = lagSystem,
parms = parameters,
method="lsoda")
if(re_add_phage==T){
state <- c(R=500+tail(out[,"R"],n=1)/100,
X=tail(out[,"X"],n=1)/100,
Y=tail(out[,"Y"],n=1)/100,
Ix=tail(out[,"Ix"],n=1)/100,
V=V0+tail(out[,"V"],n=1)/100)
} else{
state <- c(R=500+tail(out[,"R"],n=1)/100,
X=tail(out[,"X"],n=1)/100,
Y=tail(out[,"Y"],n=1)/100,
Ix=tail(out[,"Ix"],n=1)/100,
V=tail(out[,"V"],n=1)/100)
}
}
Xf <- tail(out[,"X"],n=1)
Yf <- tail(out[,"Y"],n=1)
Xprop <- Xf/(Xf+Yf)
rel_fit <- (Xprop*0.5)/((1-Xprop)*0.5)
return(rel_fit)
}
titreProfile <- function(phi,kappa,v_range=10^seq(0,11,1)){
fitness <- numeric()
for(v in v_range){
fitness <- c(fitness,competeXY(V0=v,
phi=phi,
dpi=1,
re_add_phage=F,
daylen=24,
kappa=kappa))
}
return(fitness)
}
setwd("~/immunelag/Fig3")
cur_exp <- read.csv("experiment.csv") %>% subset(select=c(Titre,Fitness))
cur_exp$Source <- "Current"
EW_exp <- data.frame(Titre =c(1e7/6,1e8/6,3e8/6),
Fitness = c(1.95,0.28,0.014),
Source="Westra et al.")
EA_exp <- read.csv("alseth.csv",stringsAsFactors = F)  %>%
subset(Treatment %in% c("Monoculture (BIM2 + SM only)","Monoculture (BIM2 + SM)")) %>%
subset(select=c(Phage.titre,CRISPR..BIM2..fitness))
names(EA_exp) <- c("Titre","Fitness")
EA_exp$Source <- "Alseth et al."
EA_exp$Titre <- gsub("[\\^]","e",EA_exp$Titre) %>%
gsub(pattern="10e",replace="1e") %>%
as.numeric()
EA_exp$Titre <- EA_exp$Titre/6
anova.test <- aov(Fitness~factor(Titre),data=cur_exp)
summary(anova.test)
TukeyHSD(anova.test)
v_range <- 10^seq(3,11,0.1)
x <- titreProfile(phi=1e3,kappa=0,v_range=v_range)
model_df <- data.frame(v=v_range,
fitness=x,
stringsAsFactors = F)
v_range <- 10^seq(3,11,0.1)
x <- titreProfile(phi=4/3,kappa=0,v_range=v_range)
model_df_low <- data.frame(v=v_range,
fitness=x,
stringsAsFactors = F)
mean_exp <- cur_exp %>% group_by(Titre) %>%
summarise(MeanFitness=mean(Fitness),
LowerCI=bootMeanCI(Fitness,n=1e5)[1],
UpperCI=bootMeanCI(Fitness,n=1e5)[2])
p1 <- ggplot() +
geom_line(data=model_df,aes(x=v_range,y=fitness),color="#d95f02",lwd=1) +
#geom_line(data=model_df_low,aes(x=v_range,y=fitness),color="red",lwd=0.5,alpha=0.5) +
geom_point(data = mean_exp,
aes(x=Titre,y=MeanFitness))  +
geom_errorbar(data = mean_exp,
aes(x=Titre,y=MeanFitness,ymin = LowerCI, ymax = UpperCI),width=0.1) +
scale_x_log10(limits=c(5e3,1e11)) +
ylim(0.1,1.4) +
theme_pubclean() +
geom_jitter(data=cur_exp,aes(x=Titre,y=Fitness),alpha=0.25,width=0.1) +
xlab("Phage Titre (PFU/mL)") +
ylab("Relative Fitness CRISPR x SM") +
geom_line(data=data.frame(x=c(1e8,1e10),y=c(1.1,1.1)),aes(x=x,y=y),alpha=0.5) +
geom_line(data=data.frame(x=c(1e6,1e10),y=c(1.2,1.2)),aes(x=x,y=y),alpha=0.5) +
geom_line(data=data.frame(x=c(1e4,1e10),y=c(1.3,1.3)),aes(x=x,y=y),alpha=0.5)  +
geom_text(data=data.frame(x=c(1e7),y=c(1.32)),aes(x=x,y=y),alpha=0.5,label="**",size=5) +
geom_text(data=data.frame(x=c(1e8),y=c(1.22)),aes(x=x,y=y),alpha=0.5,label="***",size=5) +
geom_text(data=data.frame(x=c(1e9),y=c(1.12)),aes(x=x,y=y),alpha=0.5,label="****",size=5) +
scale_y_continuous(breaks=c(0,0.25,0.5,0.75,1)) +
geom_text(data=data.frame(x=c(3e10),y=c(0.75)),aes(x=x,y=y),color="#d95f02",label=expression(phi * "=" *1000),size=7)
## Alseth et al data
v_range_EA <- 10^seq(0,10,0.1)
x <- titreProfile(phi=10,kappa=0,v_range=v_range_EA)
model_df_EA <- data.frame(v=v_range_EA,
fitness=x,
stringsAsFactors = F)
mean_exp_EA <- EA_exp %>% group_by(Titre) %>%
summarise(MeanFitness=mean(Fitness),
LowerCI=bootMeanCI(Fitness,n=1e5)[1],
UpperCI=bootMeanCI(Fitness,n=1e5)[2])
p2 <- ggplot() +
geom_line(data=model_df_EA,aes(x=v,y=fitness),color="#7570b3",lwd=1) +
geom_point(data = mean_exp_EA,
aes(x=Titre+1,y=MeanFitness))  +
geom_errorbar(data = mean_exp_EA,
aes(x=Titre+1,y=MeanFitness,ymin = LowerCI, ymax = UpperCI),width=0.1) +
scale_x_log10() +
theme_pubclean() +
geom_jitter(data=EA_exp,aes(x=Titre+1,y=Fitness),alpha=0.25,width=0.1) +
xlab("Phage Titre (PFU/mL)") +
ylab("Relative Fitness CRISPR x SM")  +
scale_y_continuous(breaks=c(0,0.5,1,1.5,2,2.5),limit=c(0,2.75)) +
ggtitle("Alseth et al. 2019 (Fig 2a)") +
geom_text(data=data.frame(x=c(1e8),y=c(1)),aes(x=x,y=y),color="#7570b3",label=expression(phi * "=" * 10),size=7)
## Westra et al data
v_range_EW <- 10^seq(0,10,0.1)
x <- titreProfile(phi=10,kappa=0.15,v_range=v_range_EW)
model_df_cost_EW <- data.frame(v=v_range_EW,
fitness=x,
stringsAsFactors = F)
v_range_EW <- 10^seq(0,10,0.1)
x <- titreProfile(phi=10,kappa=0,v_range=v_range_EW)
model_df_EW <- data.frame(v=v_range_EW,
fitness=x,
stringsAsFactors = F)
p3 <- ggplot() +
geom_line(data=model_df_cost_EW,aes(x=v,y=fitness),color="#7570b3",lwd=0.5,lty=2) +
geom_line(data=model_df_EW,aes(x=v,y=fitness),color="#7570b3",lwd=1) +
geom_point(data = data.frame(x = c(1e7,1e8,3e8),
y = c(1.95,0.28,0.014),
CI = c(0.62,0.03,0.011)),
aes(x=x,y=y))  +
geom_errorbar(data = data.frame(x = c(1e7,1e8,3e8),
y = c(1.95,0.28,0.014),
CI = c(0.62,0.03,0.011)),
aes(x=x,y=y,ymin = y - CI, ymax = y + CI),width=0.1) +
scale_x_log10(limits=c(1e0,1e10)) +
theme_pubclean() +
xlab("Phage Titre (PFU/mL)") +
ylab("Relative Fitness CRISPR x SM")   +
scale_y_continuous(breaks=c(0,0.5,1,1.5,2,2.5),limit=c(0,2.75))+
ggtitle("Westra et al. 2015 (Fig S3F)") +
geom_text(data=data.frame(x=c(1e1),y=c(1.9)),
aes(x=x,y=y),alpha=1,label=expression(kappa * "=" * 0.15),
size=3,color="black") +
geom_text(data=data.frame(x=c(1e1),y=c(1.05)),
aes(x=x,y=y),alpha=1,label=expression(kappa * "=" * 0),
size=3,color="black") +
geom_text(data=data.frame(x=c(2e5),y=c(0.7)),aes(x=x,y=y),color="#7570b3",label=expression(phi * "=" * 10),size=7)
## Put it together
setwd("~/immunelag/Fig3")
pdf(paste0("CRISPRxSM_allexperiments.pdf"),width=6,height=10)
ggarrange(p1,
ggarrange(p2,p3,ncol=2,labels=c("(b)","(c)")),
nrow=2,
labels=c("(a)",""))
dev.off()
#Early infection dynamics
library(deSolve)
library(ggsci)
library(scales)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(wesanderson)
autoimmunitySystem <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
V <- max(V,0)
U <- max(U,0)
D <- max(D,0)
SM <- max(SM,0)
I <- max(I,0)
Iv <- max(Iv,0)
Id <- max(Id,0)
dR <- w*(r0-R) - e*v*R*(U+D+SM)/(z+R)
dU <- ((1-2*mu/alpha)*v*R/(z+R) - delta*V - w)*U
dI <- delta*U*V - gam*I - w*I - mu*Iv
dIv <- delta*U*V + gam*log(beta)*Iv - (gam*exp(xi*log(beta))/xi)*I - mu*(Iv^2)/(I+1e-16)
dD <- ((1-2*mu/alpha)*v*R/(z+R) - w - delta*V)*D + mu*Iv + phi*Id
dId <-  delta*D*V - phi*Id - w*Id
dSM <- ((1-kappa)*v*R/(z+R) - w)*SM
dV <- w*(v0-V) + beta*gam*I - delta*(U+D)*V
# return the rate of change
list(c(dR,dU,dI,dIv,dD,dId,dSM,dV))
}) # end with(as.list ...
}
autoimmunitySystemNoLag <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
V <- max(V,0)
U <- max(U,0)
D <- max(D,0)
SM <- max(SM,0)
I <- max(I,0)
Iv <- max(Iv,0)
Id <- max(Id,0)
dR <- w*(r0-R) - e*v*R*(U+D+SM)/(z+R)
dU <- ((1-2*mu/alpha)*v*R/(z+R) - delta*V - w)*U
dI <- delta*U*V - gam*I - w*I - mu*Iv
dIv <- delta*U*V + gam*log(beta)*Iv - (gam*exp(xi*log(beta))/xi)*I - mu*(Iv^2)/(I+1e-16)
dD <- ((1-2*mu/alpha)*v*R/(z+R) - w)*D + mu*Iv
dId <-  0
dSM <- ((1-kappa)*v*R/(z+R) - w)*SM
dV <- w*(v0-V) + beta*gam*I - delta*(U+D)*V
# return the rate of change
list(c(dR,dU,dI,dIv,dD,dId,dSM,dV))
}) # end with(as.list ...
}
getParameters <- function(w=0.3,
r0=350,
e=5e-7,
v=2,
z=1,
delta=1e-7,
mu=1e-6,
alpha=0.4,
gam=4/3,
beta=80,
v0=0,
phi=100,
xi=1/6,
kappa=0.05){
parameters <- c(w=w,
r0=r0,
e=e,
v=v,
z=z,
delta=delta,
mu=mu,
alpha=alpha,
gam=gam,
beta=beta,
v0=v0,
phi=phi,
xi=xi,
kappa=kappa)
return(parameters)
}
getInitial <- function(R=350,
U=1e8,
I=0,
Iv=0,
D=100,
Id=0,
SM=100,
V=0){
state <- c(R=R,
U=U,
I=I,
Iv=Iv,
D=D,
Id=Id,
SM=SM,
V=V)
return(state)
}
getCumRelFit <- function(v,phi){
times <- seq(0, 336, by = .1)
parameters <- getParameters(v=v,w=0.3,v0=100,kappa=0.01,phi=phi,r0=350)
state <- getInitial(V=100)
out <- ode(y = state,
times = times,
func = autoimmunitySystem,
parms = parameters,
method="lsoda")
fC <- (out[,"D"]+out[,"Id"])/(out[,"D"]+out[,"Id"]+out[,"SM"])
fCnow <- fC[-1]
fCbefore <- fC[1]
relfit <- (fCnow*(1-fCbefore))/(fCbefore*(1-fCnow))
return(data.frame(Time=out[-1,"time"],
RelFit=relfit,
v=v))
}
getCumRelFitNoLag <- function(v,phi){
times <- seq(0, 336, by = .1)
parameters <- getParameters(v=v,w=0.3,v0=100,kappa=0.01,phi=phi,r0=350)
state <- getInitial(V=100)
out <- ode(y = state,
times = times,
func = autoimmunitySystemNoLag,
parms = parameters,
method="lsoda")
fC <- (out[,"D"]+out[,"Id"])/(out[,"D"]+out[,"Id"]+out[,"SM"])
fCnow <- fC[-1]
fCbefore <- fC[1]
relfit <- (fCnow*(1-fCbefore))/(fCbefore*(1-fCnow))
return(data.frame(Time=out[-1,"time"],
RelFit=relfit,
v=v))
}
# Cumulative RelFit
v_range <- c(0.4,0.8,1.2,2)
v_df <- data.frame()
for(i in 1:length(v_range)){
v_df <- rbind(v_df,getCumRelFit(v_range[i],phi=10))
}
v_range <- c(0.4,0.8,1.2,2)
vnl_df <- data.frame()
for(i in 1:length(v_range)){
vnl_df <- rbind(vnl_df,getCumRelFitNoLag(v_range[i],phi=10))
}
p1 <- ggplot(v_df,aes(x=Time,y=RelFit,color=factor(v))) +
geom_line(size=1.5) +
scale_y_log10(limit=c(1e-10,1e3)) +
theme_pubclean() +
geom_hline(yintercept=1,lty=2) +
labs(color="Max. Growth Rate (v)") +
ylab("Relative Fitness") +
xlab("Time (Hours)") +
scale_color_manual(values = wes_palette("Zissou1")) +
theme(legend.position = "none",
text = element_text(size=14)) +
ggtitle("With Lag")
p2 <- ggplot(vnl_df,aes(x=Time,y=RelFit,color=factor(v))) +
geom_line(size=1.5) +
scale_y_log10(limit=c(1e0,1e1)) +
theme_pubclean() +
geom_hline(yintercept=1,lty=2) +
labs(color="Max. Growth Rate (v)") +
ylab("Relative Fitness") +
xlab("Time (Hours)") +
scale_color_manual(values = wes_palette("Zissou1")) +
theme(legend.position = c(0.35,0.7),
text = element_text(size=14),
legend.background = element_rect(size = 0.5, colour = 1)) +
ggtitle("No Lag")
setwd("~/immunelag/Fig5")
pdf("lag_growth_rate_fitness_longlag.pdf",width=8,height=4)
ggarrange(p1,
p2,
ncol=2,
labels=c("(a)","(b)"))
dev.off()
# Cumulative RelFit Short Lag
v_range <- c(0.4,0.8,1.2,2)
v_df <- data.frame()
for(i in 1:length(v_range)){
v_df <- rbind(v_df,getCumRelFit(v_range[i],phi=1000))
}
v_range <- c(0.4,0.8,1.2,2)
vnl_df <- data.frame()
for(i in 1:length(v_range)){
vnl_df <- rbind(vnl_df,getCumRelFitNoLag(v_range[i],phi=1000))
}
p1 <- ggplot(v_df,aes(x=Time,y=RelFit,color=factor(v))) +
geom_line(size=1.5) +
scale_y_log10(limit=c(1e-8,1e3)) +
theme_pubclean() +
geom_hline(yintercept=1,lty=2) +
labs(color="Max. Growth Rate (v)") +
ylab("Relative Fitness") +
xlab("Time (Hours)") +
scale_color_manual(values = wes_palette("Zissou1")) +
theme(legend.position = "none",
text = element_text(size=14)) +
ggtitle("With Lag")
p2 <- ggplot(vnl_df,aes(x=Time,y=RelFit,color=factor(v))) +
geom_line(size=1.5) +
scale_y_log10(limit=c(1e0,1e1)) +
theme_pubclean() +
geom_hline(yintercept=1,lty=2) +
labs(color="Max. Growth Rate (v)") +
ylab("Relative Fitness") +
xlab("Time (Hours)") +
scale_color_manual(values = wes_palette("Zissou1")) +
theme(legend.position = c(0.35,0.7),
text = element_text(size=14),
legend.background = element_rect(size = 0.5, colour = 1)) +
ggtitle("No Lag")
setwd("~/immunelag/Fig5")
pdf("lag_growth_rate_fitness_shortlag.pdf",width=8,height=4)
ggarrange(p1,
p2,
ncol=2,
labels=c("(a)","(b)"))
dev.off()
