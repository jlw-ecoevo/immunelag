antiviral <- read.csv("~/Downloads/antiviral.csv", header=FALSE, comment.char="#")
View(antiviral)
library(dplyr)
antiviral$V3
antiviral$V3 + 1
antiviral$V3 %>% log10()
antiviral %>% group_by(V2) %>%  slice(which.min(V3))
antiviral %>% group_by(V2) %>%  slice(which.min(V3)) %>% group_by(V2) %>% count()
antiviral_counts <- antiviral %>% group_by(V2) %>%  slice(which.min(V3)) %>% group_by(V2) %>% count()
View(antiviral_counts)
best_hits <- antiviral %>% group_by(V2) %>%  slice(which.min(V3))
View(best_hits)
best_hits <- antiviral %>% group_by(V1) %>%  slice(which.min(V3))
antiviral_counts <- best_hits %>% group_by(V2) %>% count()
f_range <- 10^seq(-5,-1,1)
f_range
#Early infection dynamics
library(deSolve)
library(ggsci)
library(scales)
autoimmunitySystem <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
S <- max(S,0)
C <- max(C,0)
M <- max(M,0)
Ic <- max(Ic,0)
V <- max(V,0)
dS <- r*(1-(S+C+M)/K)*S - delta*V*S
dC <- r*(1-(S+C+M)/K)*C - delta*V*C + phi*Ic
dM <- (1-kappa)*r*(1-(S+C+M)/K)*M
dIc <- delta*V*C - phi*Ic
dV <- delta*beta*S*V - delta*(S+C)*V
# return the rate of change
list(c(dS,dC,dM,dIc,dV))
}) # end with(as.list ...
}
autoimmunitySystemNoLag <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
S <- max(S,0)
C <- max(C,0)
M <- max(M,0)
Ic <- max(Ic,0)
V <- max(V,0)
dS <- r*(1-(S+C+M)/K)*S - delta*V*S
dC <- r*(1-(S+C+M)/K)*C
dM <- (1-kappa)*r*(1-(S+C+M)/K)*M
dIc <- 0
dV <- delta*beta*S*V - delta*(S+C)*V
# return the rate of change
list(c(dS,dC,dM,dIc,dV))
}) # end with(as.list ...
}
getParameters <- function(r=2,
K=1e9,
beta=80,
delta=1e-7,
phi=4/3,
kappa=0.05){
parameters <- c(r=r,
K=K,
delta=delta,
beta=beta,
phi=phi,
kappa=kappa)
return(parameters)
}
getInitial <- function(S=1e6,
C=100,
M=100,
Ic=0,
V=100){
state <- c(S=S,
C=C,
M=M,
Ic=Ic,
V=V)
return(state)
}
plotOut <- function(out,main=""){
par(mar=c(5.1, 5, 4.1, 1))
plot(out[,"time"],out[,"S"],type="l",
log="y",ylim=c(1,1e11),lwd=2,main=main,
xlab="Time (hours)",ylab="Density",
cex.axis=1.5,cex.lab=1.5,cex.main=2)
lines(out[,"time"],out[,"C"],col=pal_npg("nrc")(6)[4],lwd=5)
lines(out[,"time"],out[,"Ic"],col=pal_npg("nrc")(6)[4],lty=2,lwd=3)
lines(out[,"time"],out[,"M"],col=pal_npg("nrc")(6)[3],lwd=5)
lines(out[,"time"],out[,"V"],col=pal_npg("nrc")(6)[1],lwd=5)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
times <- seq(0, 24, by = 1)
parameters <- getParameters(kappa=0.01,phi=10)
state <- getInitial(V=100)
out <- ode(y = state,
times = times,
func = autoimmunitySystem,
parms = parameters,
method="lsoda")
parameters <- getParameters(kappa=0.01,phi=10)
state <- getInitial(V=100)
out_nl <- ode(y = state,
times = times,
func = autoimmunitySystemNoLag,
parms = parameters,
method="lsoda")
plotOut(out,main=expression("Immunization With Lag"))
plotOut(out_nl,main=expression("Immunization Without Lag"))
#Early infection dynamics
library(deSolve)
library(ggsci)
library(scales)
autoimmunitySystem <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
S <- max(S,0)
C <- max(C,0)
M <- max(M,0)
Ic <- max(Ic,0)
V <- max(V,0)
dS <- r*(1-(S+C+M)/K)*S - delta*V*S
dC <- r*(1-(S+C+M)/K)*C - delta*V*C + phi*Ic
dM <- (1-kappa)*r*(1-(S+C+M)/K)*M
dIc <- delta*V*C - phi*Ic
dV <- delta*beta*S*V - delta*(S+C)*V
# return the rate of change
list(c(dS,dC,dM,dIc,dV))
}) # end with(as.list ...
}
autoimmunitySystemNoLag <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
S <- max(S,0)
C <- max(C,0)
M <- max(M,0)
Ic <- max(Ic,0)
V <- max(V,0)
dS <- r*(1-(S+C+M)/K)*S - delta*V*S
dC <- r*(1-(S+C+M)/K)*C
dM <- (1-kappa)*r*(1-(S+C+M)/K)*M
dIc <- 0
dV <- delta*beta*S*V - delta*(S+C)*V
# return the rate of change
list(c(dS,dC,dM,dIc,dV))
}) # end with(as.list ...
}
getParameters <- function(r=2,
K=1e9,
beta=80,
delta=1e-7,
phi=4/3,
kappa=0.05){
parameters <- c(r=r,
K=K,
delta=delta,
beta=beta,
phi=phi,
kappa=kappa)
return(parameters)
}
getInitial <- function(S=1e8,
C=100,
M=100,
Ic=0,
V=100){
state <- c(S=S,
C=C,
M=M,
Ic=Ic,
V=V)
return(state)
}
plotOut <- function(out,main=""){
par(mar=c(5.1, 5, 4.1, 1))
plot(out[,"time"],out[,"S"],type="l",
log="y",ylim=c(1,1e11),lwd=2,main=main,
xlab="Time (hours)",ylab="Density",
cex.axis=1.5,cex.lab=1.5,cex.main=2)
lines(out[,"time"],out[,"C"],col=pal_npg("nrc")(6)[4],lwd=5)
lines(out[,"time"],out[,"Ic"],col=pal_npg("nrc")(6)[4],lty=2,lwd=3)
lines(out[,"time"],out[,"M"],col=pal_npg("nrc")(6)[3],lwd=5)
lines(out[,"time"],out[,"V"],col=pal_npg("nrc")(6)[1],lwd=5)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
times <- seq(0, 24, by = 1)
parameters <- getParameters(kappa=0.01,phi=10)
state <- getInitial(V=100)
out <- ode(y = state,
times = times,
func = autoimmunitySystem,
parms = parameters,
method="lsoda")
parameters <- getParameters(kappa=0.01,phi=10)
state <- getInitial(V=100)
out_nl <- ode(y = state,
times = times,
func = autoimmunitySystemNoLag,
parms = parameters,
method="lsoda")
plotOut(out,main=expression("Immunization With Lag"))
plotOut(out_nl,main=expression("Immunization Without Lag"))
#Early infection dynamics
library(deSolve)
library(ggsci)
library(scales)
autoimmunitySystem <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
S <- max(S,0)
C <- max(C,0)
M <- max(M,0)
Ic <- max(Ic,0)
V <- max(V,0)
dS <- r*(1-(S+C+M)/K)*S - delta*V*S
dC <- r*(1-(S+C+M)/K)*C - delta*V*C + phi*Ic
dM <- (1-kappa)*r*(1-(S+C+M)/K)*M
dIc <- delta*V*C - phi*Ic
dV <- delta*beta*S*V - delta*(S+C)*V
# return the rate of change
list(c(dS,dC,dM,dIc,dV))
}) # end with(as.list ...
}
autoimmunitySystemNoLag <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
S <- max(S,0)
C <- max(C,0)
M <- max(M,0)
Ic <- max(Ic,0)
V <- max(V,0)
dS <- r*(1-(S+C+M)/K)*S - delta*V*S
dC <- r*(1-(S+C+M)/K)*C
dM <- (1-kappa)*r*(1-(S+C+M)/K)*M
dIc <- 0
dV <- delta*beta*S*V - delta*(S+C)*V
# return the rate of change
list(c(dS,dC,dM,dIc,dV))
}) # end with(as.list ...
}
getParameters <- function(r=2,
K=1e9,
beta=80,
delta=1e-7,
phi=4/3,
kappa=0.05){
parameters <- c(r=r,
K=K,
delta=delta,
beta=beta,
phi=phi,
kappa=kappa)
return(parameters)
}
getInitial <- function(S=1e8,
C=100,
M=100,
Ic=0,
V=100){
state <- c(S=S,
C=C,
M=M,
Ic=Ic,
V=V)
return(state)
}
plotOut <- function(out,main=""){
par(mar=c(5.1, 5, 4.1, 1))
plot(out[,"time"],out[,"S"],type="l",
log="y",ylim=c(1,1e11),lwd=2,main=main,
xlab="Time (hours)",ylab="Density",
cex.axis=1.5,cex.lab=1.5,cex.main=2)
lines(out[,"time"],out[,"C"],col=pal_npg("nrc")(6)[4],lwd=5)
lines(out[,"time"],out[,"Ic"],col=pal_npg("nrc")(6)[4],lty=2,lwd=3)
lines(out[,"time"],out[,"M"],col=pal_npg("nrc")(6)[3],lwd=5)
lines(out[,"time"],out[,"V"],col=pal_npg("nrc")(6)[1],lwd=5)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
times <- seq(0, 24, by = 1)
parameters <- getParameters(kappa=0.01,phi=10)
state <- getInitial(V=100)
out <- ode(y = state,
times = times,
func = autoimmunitySystem,
parms = parameters,
method="lsoda")
parameters <- getParameters(kappa=0.01,phi=10)
state <- getInitial(V=100)
out_nl <- ode(y = state,
times = times,
func = autoimmunitySystemNoLag,
parms = parameters,
method="lsoda")
setwd("~/snsmod/Figs")
pdf(paste0("ImmunizationLag_minimal.pdf"),width=10,height=5)
par(mfrow=c(1,2))
plotOut(out,main=expression("Immunization With Lag"))
plotOut(out_nl,main=expression("Immunization Without Lag"))
par(mfrow=c(1,1))
dev.off()
setwd("~/immunelag/minimalmodel/")
#Early infection dynamics
library(deSolve)
library(ggsci)
library(scales)
autoimmunitySystem <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
S <- max(S,0)
C <- max(C,0)
M <- max(M,0)
Ic <- max(Ic,0)
V <- max(V,0)
dS <- r*(1-(S+C+M)/K)*S - delta*V*S
dC <- r*(1-(S+C+M)/K)*C - delta*V*C + phi*Ic
dM <- (1-kappa)*r*(1-(S+C+M)/K)*M
dIc <- delta*V*C - phi*Ic
dV <- delta*beta*S*V - delta*(S+C)*V
# return the rate of change
list(c(dS,dC,dM,dIc,dV))
}) # end with(as.list ...
}
autoimmunitySystemNoLag <- function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
S <- max(S,0)
C <- max(C,0)
M <- max(M,0)
Ic <- max(Ic,0)
V <- max(V,0)
dS <- r*(1-(S+C+M)/K)*S - delta*V*S
dC <- r*(1-(S+C+M)/K)*C
dM <- (1-kappa)*r*(1-(S+C+M)/K)*M
dIc <- 0
dV <- delta*beta*S*V - delta*(S+C)*V
# return the rate of change
list(c(dS,dC,dM,dIc,dV))
}) # end with(as.list ...
}
getParameters <- function(r=2,
K=1e9,
beta=80,
delta=1e-7,
phi=4/3,
kappa=0.01){
parameters <- c(r=r,
K=K,
delta=delta,
beta=beta,
phi=phi,
kappa=kappa)
return(parameters)
}
getInitial <- function(S=1e8,
C=100,
M=100,
Ic=0,
V=100){
state <- c(S=S,
C=C,
M=M,
Ic=Ic,
V=V)
return(state)
}
plotOut <- function(out,main=""){
par(mar=c(5.1, 5, 4.1, 1))
plot(out[,"time"],out[,"S"],type="l",
log="y",ylim=c(1,1e11),lwd=2,main=main,
xlab="Time (hours)",ylab="Density",
cex.axis=1.5,cex.lab=1.5,cex.main=2)
lines(out[,"time"],out[,"C"],col=pal_npg("nrc")(6)[4],lwd=5)
lines(out[,"time"],out[,"Ic"],col=pal_npg("nrc")(6)[4],lty=2,lwd=3)
lines(out[,"time"],out[,"M"],col=pal_npg("nrc")(6)[3],lwd=5)
lines(out[,"time"],out[,"V"],col=pal_npg("nrc")(6)[1],lwd=5)
par(mar=c(5.1, 4.1, 4.1, 2.1))
}
times <- seq(0, 24, by = 1)
parameters <- getParameters(kappa=0.01,phi=10)
state <- getInitial(V=100)
out <- ode(y = state,
times = times,
func = autoimmunitySystem,
parms = parameters,
method="lsoda")
parameters <- getParameters(kappa=0.01,phi=10)
state <- getInitial(V=100)
out_nl <- ode(y = state,
times = times,
func = autoimmunitySystemNoLag,
parms = parameters,
method="lsoda")
setwd("~/immunelag/MinimalModel/")
pdf(paste0("ImmunizationLag_minimal.pdf"),width=10,height=5)
par(mfrow=c(1,2))
plotOut(out,main=expression("Immunization With Lag"))
plotOut(out_nl,main=expression("Immunization Without Lag"))
par(mfrow=c(1,1))
dev.off()
